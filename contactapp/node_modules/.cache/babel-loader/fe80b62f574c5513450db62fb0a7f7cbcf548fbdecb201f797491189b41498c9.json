{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\contactapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { getContacts } from './api/ContactService';\nimport { ContactList } from './components/ContactList';\nimport { Header } from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState({});\n  const [currentPage, setCurrentPage] = useState(0);\n  const getAllContacts = async (page = 0, size = 10) => {\n    try {\n      setCurrentPage(page);\n      const {\n        data\n      } = await getContacts(page, size);\n      setData(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const toggleModal = show => {};\n  useEffect(() => {\n    getAllContacts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      toggleModal: toggleModal,\n      nbOfContacts: data.totalElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: '/contacts'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contacts\",\n        element: /*#__PURE__*/_jsxDEV(ContactList, {\n          data: data,\n          currentPage: currentPage,\n          getAllContacts: getAllContacts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Y7DZwNjmub0k46Xq6qdve4RpByo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Route","Routes","getContacts","ContactList","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","currentPage","setCurrentPage","getAllContacts","page","size","error","console","log","toggleModal","show","children","nbOfContacts","totalElements","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Navigate","to","_c","$RefreshReg$"],"sources":["D:/js/contactapp/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { getContacts } from './api/ContactService'\nimport { ContactList } from './components/ContactList'\nimport { Header } from './components/Header'\n\nfunction App() {\n\tconst [data, setData] = useState({})\n\tconst [currentPage, setCurrentPage] = useState(0)\n\n\tconst getAllContacts = async (page = 0, size = 10) => {\n\t\ttry {\n\t\t\tsetCurrentPage(page)\n\t\t\tconst { data } = await getContacts(page, size)\n\t\t\tsetData(data)\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t}\n\n\tconst toggleModal = (show) => {}\n\n\tuseEffect(() => {\n\t\tgetAllContacts()\n\t}, [])\n\n\treturn (\n\t\t<>\n\t\t\t<Header toggleModal={toggleModal} nbOfContacts={data.totalElements} />\n\t\t\t<Routes>\n\t\t\t\t<Route path='/' element={<Navigate to={'/contacts'} />} />\n\t\t\t\t<Route\n\t\t\t\t\tpath='/contacts'\n\t\t\t\t\telement={\n\t\t\t\t\t\t<ContactList\n\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\tcurrentPage={currentPage}\n\t\t\t\t\t\t\tgetAllContacts={getAllContacts}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Routes>\n\t\t</>\n\t)\n}\n\nexport default App\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,MAAM,QAAQ,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMgB,cAAc,GAAG,MAAAA,CAAOC,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE,KAAK;IACrD,IAAI;MACHH,cAAc,CAACE,IAAI,CAAC;MACpB,MAAM;QAAEL;MAAK,CAAC,GAAG,MAAMT,WAAW,CAACc,IAAI,EAAEC,IAAI,CAAC;MAC9CL,OAAO,CAACD,IAAI,CAAC;IACd,CAAC,CAAC,OAAOO,KAAK,EAAE;MACfC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACnB;EACD,CAAC;EAED,MAAMG,WAAW,GAAIC,IAAI,IAAK,CAAC,CAAC;EAEhCxB,SAAS,CAAC,MAAM;IACfiB,cAAc,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACCT,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACCjB,OAAA,CAACF,MAAM;MAACiB,WAAW,EAAEA,WAAY;MAACG,YAAY,EAAEb,IAAI,CAACc;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtEvB,OAAA,CAACL,MAAM;MAAAsB,QAAA,gBACNjB,OAAA,CAACN,KAAK;QAAC8B,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEzB,OAAA,CAAC0B,QAAQ;UAACC,EAAE,EAAE;QAAY;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1DvB,OAAA,CAACN,KAAK;QACL8B,IAAI,EAAC,WAAW;QAChBC,OAAO,eACNzB,OAAA,CAACH,WAAW;UACXQ,IAAI,EAAEA,IAAK;UACXE,WAAW,EAAEA,WAAY;UACzBE,cAAc,EAAEA;QAAe;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MACD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA,eACR,CAAC;AAEL;AAACnB,EAAA,CAtCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAwCZ,eAAeA,GAAG;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}